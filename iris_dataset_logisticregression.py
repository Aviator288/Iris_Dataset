# -*- coding: utf-8 -*-
"""Iris_Dataset_LogisticRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12gNCUnbA8woTmRno5xSJKg5J7WkmTCab
"""

#Name: Glory Joe-Ibekwe
# ID: 2144448

# required libraries
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score
import numpy as np

# read the dataset
data = pd.read_csv('Iris_Data.csv')
print(data.head())

from google.colab import drive
drive.mount('/content/drive')

"""# New Section"""

print('\n\nColumn Names\n\n')
print(data.columns)

#label encode the target variable
encode = LabelEncoder()
data.Species = encode.fit_transform(data.Species)

print(data.head())

# train-test-split   
train , test = train_test_split(data,test_size=0.2,random_state=0)

print('shape of training data : ',train.shape)
print('shape of testing data',test.shape)

# seperate the target and independent variable
train_x = train.drop(columns=['Species'],axis=1)
train_y = train['Species']

# create the object of the model
model = LogisticRegression()

model.fit(train_x,train_y)

predict = model.predict(test_x)

print('Predicted Values on Test Data',encode.inverse_transform(predict))

print('\n\nAccuracy Score on test data : \n\n')
print(accuracy_score(test_y,predict))

# Visualising the Test set results
import seaborn as sns
import matplotlib.pyplot as plt
 
# style used as a theme of graph
# for example if we want black
# graph with grid then write "darkgrid"
sns.set_style("whitegrid")

# sepal_length, petal_length are iris
# feature data height used to define
# Height of graph whereas hue store the
# class of iris dataset.
sns.FacetGrid(data, hue ="Species",
              height = 6).map(plt.scatter,
                              'Sepal_Length',
                              'Petal_length').add_legend()

# Visualising the Test set results
import seaborn as sns
import matplotlib.pyplot as plt
 
# style used as a theme of graph
# for example if we want black
# graph with grid then write "darkgrid"
sns.set_style("whitegrid")
 
# sepal_length, petal_length are iris
# feature data height used to define
# Height & weidth of graph whereas hue store the
# class of iris dataset.
sns.FacetGrid(data, hue ="Species",
              height = 6).map(plt.scatter,
                              'Petal_length',
                              'Sepal_Width').add_legend()